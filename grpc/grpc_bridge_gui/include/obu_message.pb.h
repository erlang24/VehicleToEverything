// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: obu_message.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_obu_5fmessage_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_obu_5fmessage_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_obu_5fmessage_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_obu_5fmessage_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_obu_5fmessage_2eproto;
namespace grpc {
namespace obu {
namespace msg {
class Header;
struct HeaderDefaultTypeInternal;
extern HeaderDefaultTypeInternal _Header_default_instance_;
class ObuBasicInfo;
struct ObuBasicInfoDefaultTypeInternal;
extern ObuBasicInfoDefaultTypeInternal _ObuBasicInfo_default_instance_;
class ObuTrafficLightInfo;
struct ObuTrafficLightInfoDefaultTypeInternal;
extern ObuTrafficLightInfoDefaultTypeInternal _ObuTrafficLightInfo_default_instance_;
class ObuWarningInfo;
struct ObuWarningInfoDefaultTypeInternal;
extern ObuWarningInfoDefaultTypeInternal _ObuWarningInfo_default_instance_;
class Time;
struct TimeDefaultTypeInternal;
extern TimeDefaultTypeInternal _Time_default_instance_;
class TrafficLight;
struct TrafficLightDefaultTypeInternal;
extern TrafficLightDefaultTypeInternal _TrafficLight_default_instance_;
}  // namespace msg
}  // namespace obu
}  // namespace grpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace grpc {
namespace obu {
namespace msg {
enum TrafficLight_TrafficLightState : int {
  TrafficLight_TrafficLightState_UNKNOWN = 0,
  TrafficLight_TrafficLightState_RED = 1,
  TrafficLight_TrafficLightState_YELLOW = 2,
  TrafficLight_TrafficLightState_GREEN = 3,
  TrafficLight_TrafficLightState_TrafficLight_TrafficLightState_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TrafficLight_TrafficLightState_TrafficLight_TrafficLightState_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool TrafficLight_TrafficLightState_IsValid(int value);
extern const uint32_t TrafficLight_TrafficLightState_internal_data_[];
constexpr TrafficLight_TrafficLightState TrafficLight_TrafficLightState_TrafficLightState_MIN = static_cast<TrafficLight_TrafficLightState>(0);
constexpr TrafficLight_TrafficLightState TrafficLight_TrafficLightState_TrafficLightState_MAX = static_cast<TrafficLight_TrafficLightState>(3);
constexpr int TrafficLight_TrafficLightState_TrafficLightState_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
TrafficLight_TrafficLightState_descriptor();
template <typename T>
const std::string& TrafficLight_TrafficLightState_Name(T value) {
  static_assert(std::is_same<T, TrafficLight_TrafficLightState>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TrafficLightState_Name().");
  return TrafficLight_TrafficLightState_Name(static_cast<TrafficLight_TrafficLightState>(value));
}
template <>
inline const std::string& TrafficLight_TrafficLightState_Name(TrafficLight_TrafficLightState value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TrafficLight_TrafficLightState_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool TrafficLight_TrafficLightState_Parse(absl::string_view name, TrafficLight_TrafficLightState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TrafficLight_TrafficLightState>(
      TrafficLight_TrafficLightState_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TrafficLight final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.obu.msg.TrafficLight) */ {
 public:
  inline TrafficLight() : TrafficLight(nullptr) {}
  ~TrafficLight() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TrafficLight(::google::protobuf::internal::ConstantInitialized);

  inline TrafficLight(const TrafficLight& from)
      : TrafficLight(nullptr, from) {}
  TrafficLight(TrafficLight&& from) noexcept
    : TrafficLight() {
    *this = ::std::move(from);
  }

  inline TrafficLight& operator=(const TrafficLight& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrafficLight& operator=(TrafficLight&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrafficLight& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrafficLight* internal_default_instance() {
    return reinterpret_cast<const TrafficLight*>(
               &_TrafficLight_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(TrafficLight& a, TrafficLight& b) {
    a.Swap(&b);
  }
  inline void Swap(TrafficLight* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrafficLight* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrafficLight* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TrafficLight>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrafficLight& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TrafficLight& from) {
    TrafficLight::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TrafficLight* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "grpc.obu.msg.TrafficLight";
  }
  protected:
  explicit TrafficLight(::google::protobuf::Arena* arena);
  TrafficLight(::google::protobuf::Arena* arena, const TrafficLight& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using TrafficLightState = TrafficLight_TrafficLightState;
  static constexpr TrafficLightState UNKNOWN = TrafficLight_TrafficLightState_UNKNOWN;
  static constexpr TrafficLightState RED = TrafficLight_TrafficLightState_RED;
  static constexpr TrafficLightState YELLOW = TrafficLight_TrafficLightState_YELLOW;
  static constexpr TrafficLightState GREEN = TrafficLight_TrafficLightState_GREEN;
  static inline bool TrafficLightState_IsValid(int value) {
    return TrafficLight_TrafficLightState_IsValid(value);
  }
  static constexpr TrafficLightState TrafficLightState_MIN = TrafficLight_TrafficLightState_TrafficLightState_MIN;
  static constexpr TrafficLightState TrafficLightState_MAX = TrafficLight_TrafficLightState_TrafficLightState_MAX;
  static constexpr int TrafficLightState_ARRAYSIZE = TrafficLight_TrafficLightState_TrafficLightState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* TrafficLightState_descriptor() {
    return TrafficLight_TrafficLightState_descriptor();
  }
  template <typename T>
  static inline const std::string& TrafficLightState_Name(T value) {
    return TrafficLight_TrafficLightState_Name(value);
  }
  static inline bool TrafficLightState_Parse(absl::string_view name, TrafficLightState* value) {
    return TrafficLight_TrafficLightState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kStateFieldNumber = 2,
    kRemainingTimeFieldNumber = 3,
  };
  // .grpc.obu.msg.TrafficLight.TrafficLightState state = 2;
  void clear_state() ;
  ::grpc::obu::msg::TrafficLight_TrafficLightState state() const;
  void set_state(::grpc::obu::msg::TrafficLight_TrafficLightState value);

  private:
  ::grpc::obu::msg::TrafficLight_TrafficLightState _internal_state() const;
  void _internal_set_state(::grpc::obu::msg::TrafficLight_TrafficLightState value);

  public:
  // float remaining_time = 3;
  void clear_remaining_time() ;
  float remaining_time() const;
  void set_remaining_time(float value);

  private:
  float _internal_remaining_time() const;
  void _internal_set_remaining_time(float value);

  public:
  // @@protoc_insertion_point(class_scope:grpc.obu.msg.TrafficLight)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    int state_;
    float remaining_time_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_obu_5fmessage_2eproto;
};// -------------------------------------------------------------------

class Time final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.obu.msg.Time) */ {
 public:
  inline Time() : Time(nullptr) {}
  ~Time() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Time(::google::protobuf::internal::ConstantInitialized);

  inline Time(const Time& from)
      : Time(nullptr, from) {}
  Time(Time&& from) noexcept
    : Time() {
    *this = ::std::move(from);
  }

  inline Time& operator=(const Time& from) {
    CopyFrom(from);
    return *this;
  }
  inline Time& operator=(Time&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Time& default_instance() {
    return *internal_default_instance();
  }
  static inline const Time* internal_default_instance() {
    return reinterpret_cast<const Time*>(
               &_Time_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Time& a, Time& b) {
    a.Swap(&b);
  }
  inline void Swap(Time* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Time* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Time* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Time>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Time& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Time& from) {
    Time::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Time* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "grpc.obu.msg.Time";
  }
  protected:
  explicit Time(::google::protobuf::Arena* arena);
  Time(::google::protobuf::Arena* arena, const Time& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSecFieldNumber = 1,
    kNanosecFieldNumber = 2,
  };
  // int32 sec = 1;
  void clear_sec() ;
  ::int32_t sec() const;
  void set_sec(::int32_t value);

  private:
  ::int32_t _internal_sec() const;
  void _internal_set_sec(::int32_t value);

  public:
  // uint32 nanosec = 2;
  void clear_nanosec() ;
  ::uint32_t nanosec() const;
  void set_nanosec(::uint32_t value);

  private:
  ::uint32_t _internal_nanosec() const;
  void _internal_set_nanosec(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:grpc.obu.msg.Time)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t sec_;
    ::uint32_t nanosec_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_obu_5fmessage_2eproto;
};// -------------------------------------------------------------------

class ObuWarningInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.obu.msg.ObuWarningInfo) */ {
 public:
  inline ObuWarningInfo() : ObuWarningInfo(nullptr) {}
  ~ObuWarningInfo() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ObuWarningInfo(::google::protobuf::internal::ConstantInitialized);

  inline ObuWarningInfo(const ObuWarningInfo& from)
      : ObuWarningInfo(nullptr, from) {}
  ObuWarningInfo(ObuWarningInfo&& from) noexcept
    : ObuWarningInfo() {
    *this = ::std::move(from);
  }

  inline ObuWarningInfo& operator=(const ObuWarningInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObuWarningInfo& operator=(ObuWarningInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ObuWarningInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const ObuWarningInfo* internal_default_instance() {
    return reinterpret_cast<const ObuWarningInfo*>(
               &_ObuWarningInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ObuWarningInfo& a, ObuWarningInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ObuWarningInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObuWarningInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ObuWarningInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ObuWarningInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ObuWarningInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ObuWarningInfo& from) {
    ObuWarningInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ObuWarningInfo* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "grpc.obu.msg.ObuWarningInfo";
  }
  protected:
  explicit ObuWarningInfo(::google::protobuf::Arena* arena);
  ObuWarningInfo(::google::protobuf::Arena* arena, const ObuWarningInfo& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFcwFieldNumber = 1,
    kIcwFieldNumber = 2,
    kBswFieldNumber = 3,
    kAvwFieldNumber = 4,
    kGlosaMpsFieldNumber = 6,
    kGlosaFieldNumber = 5,
    kEvwFieldNumber = 7,
  };
  // bool fcw = 1;
  void clear_fcw() ;
  bool fcw() const;
  void set_fcw(bool value);

  private:
  bool _internal_fcw() const;
  void _internal_set_fcw(bool value);

  public:
  // bool icw = 2;
  void clear_icw() ;
  bool icw() const;
  void set_icw(bool value);

  private:
  bool _internal_icw() const;
  void _internal_set_icw(bool value);

  public:
  // bool bsw = 3;
  void clear_bsw() ;
  bool bsw() const;
  void set_bsw(bool value);

  private:
  bool _internal_bsw() const;
  void _internal_set_bsw(bool value);

  public:
  // bool avw = 4;
  void clear_avw() ;
  bool avw() const;
  void set_avw(bool value);

  private:
  bool _internal_avw() const;
  void _internal_set_avw(bool value);

  public:
  // float glosa_mps = 6;
  void clear_glosa_mps() ;
  float glosa_mps() const;
  void set_glosa_mps(float value);

  private:
  float _internal_glosa_mps() const;
  void _internal_set_glosa_mps(float value);

  public:
  // bool glosa = 5;
  void clear_glosa() ;
  bool glosa() const;
  void set_glosa(bool value);

  private:
  bool _internal_glosa() const;
  void _internal_set_glosa(bool value);

  public:
  // bool evw = 7;
  void clear_evw() ;
  bool evw() const;
  void set_evw(bool value);

  private:
  bool _internal_evw() const;
  void _internal_set_evw(bool value);

  public:
  // @@protoc_insertion_point(class_scope:grpc.obu.msg.ObuWarningInfo)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    bool fcw_;
    bool icw_;
    bool bsw_;
    bool avw_;
    float glosa_mps_;
    bool glosa_;
    bool evw_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_obu_5fmessage_2eproto;
};// -------------------------------------------------------------------

class Header final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.obu.msg.Header) */ {
 public:
  inline Header() : Header(nullptr) {}
  ~Header() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Header(::google::protobuf::internal::ConstantInitialized);

  inline Header(const Header& from)
      : Header(nullptr, from) {}
  Header(Header&& from) noexcept
    : Header() {
    *this = ::std::move(from);
  }

  inline Header& operator=(const Header& from) {
    CopyFrom(from);
    return *this;
  }
  inline Header& operator=(Header&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Header& default_instance() {
    return *internal_default_instance();
  }
  static inline const Header* internal_default_instance() {
    return reinterpret_cast<const Header*>(
               &_Header_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Header& a, Header& b) {
    a.Swap(&b);
  }
  inline void Swap(Header* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Header* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Header* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Header>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Header& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Header& from) {
    Header::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Header* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "grpc.obu.msg.Header";
  }
  protected:
  explicit Header(::google::protobuf::Arena* arena);
  Header(::google::protobuf::Arena* arena, const Header& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kFrameIdFieldNumber = 2,
    kStatusFieldNumber = 4,
    kStampFieldNumber = 3,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string frame_id = 2;
  void clear_frame_id() ;
  const std::string& frame_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_frame_id(Arg_&& arg, Args_... args);
  std::string* mutable_frame_id();
  PROTOBUF_NODISCARD std::string* release_frame_id();
  void set_allocated_frame_id(std::string* value);

  private:
  const std::string& _internal_frame_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_frame_id(
      const std::string& value);
  std::string* _internal_mutable_frame_id();

  public:
  // string status = 4;
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // .grpc.obu.msg.Time stamp = 3;
  bool has_stamp() const;
  void clear_stamp() ;
  const ::grpc::obu::msg::Time& stamp() const;
  PROTOBUF_NODISCARD ::grpc::obu::msg::Time* release_stamp();
  ::grpc::obu::msg::Time* mutable_stamp();
  void set_allocated_stamp(::grpc::obu::msg::Time* value);
  void unsafe_arena_set_allocated_stamp(::grpc::obu::msg::Time* value);
  ::grpc::obu::msg::Time* unsafe_arena_release_stamp();

  private:
  const ::grpc::obu::msg::Time& _internal_stamp() const;
  ::grpc::obu::msg::Time* _internal_mutable_stamp();

  public:
  // @@protoc_insertion_point(class_scope:grpc.obu.msg.Header)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      46, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr frame_id_;
    ::google::protobuf::internal::ArenaStringPtr status_;
    ::grpc::obu::msg::Time* stamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_obu_5fmessage_2eproto;
};// -------------------------------------------------------------------

class ObuTrafficLightInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.obu.msg.ObuTrafficLightInfo) */ {
 public:
  inline ObuTrafficLightInfo() : ObuTrafficLightInfo(nullptr) {}
  ~ObuTrafficLightInfo() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ObuTrafficLightInfo(::google::protobuf::internal::ConstantInitialized);

  inline ObuTrafficLightInfo(const ObuTrafficLightInfo& from)
      : ObuTrafficLightInfo(nullptr, from) {}
  ObuTrafficLightInfo(ObuTrafficLightInfo&& from) noexcept
    : ObuTrafficLightInfo() {
    *this = ::std::move(from);
  }

  inline ObuTrafficLightInfo& operator=(const ObuTrafficLightInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObuTrafficLightInfo& operator=(ObuTrafficLightInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ObuTrafficLightInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const ObuTrafficLightInfo* internal_default_instance() {
    return reinterpret_cast<const ObuTrafficLightInfo*>(
               &_ObuTrafficLightInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ObuTrafficLightInfo& a, ObuTrafficLightInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ObuTrafficLightInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObuTrafficLightInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ObuTrafficLightInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ObuTrafficLightInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ObuTrafficLightInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ObuTrafficLightInfo& from) {
    ObuTrafficLightInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ObuTrafficLightInfo* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "grpc.obu.msg.ObuTrafficLightInfo";
  }
  protected:
  explicit ObuTrafficLightInfo(::google::protobuf::Arena* arena);
  ObuTrafficLightInfo(::google::protobuf::Arena* arena, const ObuTrafficLightInfo& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeaderFieldNumber = 1,
    kTurnLeftFieldNumber = 2,
    kStraightAheadFieldNumber = 3,
    kTurnRightFieldNumber = 4,
  };
  // .grpc.obu.msg.Header Header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::grpc::obu::msg::Header& header() const;
  PROTOBUF_NODISCARD ::grpc::obu::msg::Header* release_header();
  ::grpc::obu::msg::Header* mutable_header();
  void set_allocated_header(::grpc::obu::msg::Header* value);
  void unsafe_arena_set_allocated_header(::grpc::obu::msg::Header* value);
  ::grpc::obu::msg::Header* unsafe_arena_release_header();

  private:
  const ::grpc::obu::msg::Header& _internal_header() const;
  ::grpc::obu::msg::Header* _internal_mutable_header();

  public:
  // .grpc.obu.msg.TrafficLight turn_left = 2;
  bool has_turn_left() const;
  void clear_turn_left() ;
  const ::grpc::obu::msg::TrafficLight& turn_left() const;
  PROTOBUF_NODISCARD ::grpc::obu::msg::TrafficLight* release_turn_left();
  ::grpc::obu::msg::TrafficLight* mutable_turn_left();
  void set_allocated_turn_left(::grpc::obu::msg::TrafficLight* value);
  void unsafe_arena_set_allocated_turn_left(::grpc::obu::msg::TrafficLight* value);
  ::grpc::obu::msg::TrafficLight* unsafe_arena_release_turn_left();

  private:
  const ::grpc::obu::msg::TrafficLight& _internal_turn_left() const;
  ::grpc::obu::msg::TrafficLight* _internal_mutable_turn_left();

  public:
  // .grpc.obu.msg.TrafficLight straight_ahead = 3;
  bool has_straight_ahead() const;
  void clear_straight_ahead() ;
  const ::grpc::obu::msg::TrafficLight& straight_ahead() const;
  PROTOBUF_NODISCARD ::grpc::obu::msg::TrafficLight* release_straight_ahead();
  ::grpc::obu::msg::TrafficLight* mutable_straight_ahead();
  void set_allocated_straight_ahead(::grpc::obu::msg::TrafficLight* value);
  void unsafe_arena_set_allocated_straight_ahead(::grpc::obu::msg::TrafficLight* value);
  ::grpc::obu::msg::TrafficLight* unsafe_arena_release_straight_ahead();

  private:
  const ::grpc::obu::msg::TrafficLight& _internal_straight_ahead() const;
  ::grpc::obu::msg::TrafficLight* _internal_mutable_straight_ahead();

  public:
  // .grpc.obu.msg.TrafficLight turn_right = 4;
  bool has_turn_right() const;
  void clear_turn_right() ;
  const ::grpc::obu::msg::TrafficLight& turn_right() const;
  PROTOBUF_NODISCARD ::grpc::obu::msg::TrafficLight* release_turn_right();
  ::grpc::obu::msg::TrafficLight* mutable_turn_right();
  void set_allocated_turn_right(::grpc::obu::msg::TrafficLight* value);
  void unsafe_arena_set_allocated_turn_right(::grpc::obu::msg::TrafficLight* value);
  ::grpc::obu::msg::TrafficLight* unsafe_arena_release_turn_right();

  private:
  const ::grpc::obu::msg::TrafficLight& _internal_turn_right() const;
  ::grpc::obu::msg::TrafficLight* _internal_mutable_turn_right();

  public:
  // @@protoc_insertion_point(class_scope:grpc.obu.msg.ObuTrafficLightInfo)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 4,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::grpc::obu::msg::Header* header_;
    ::grpc::obu::msg::TrafficLight* turn_left_;
    ::grpc::obu::msg::TrafficLight* straight_ahead_;
    ::grpc::obu::msg::TrafficLight* turn_right_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_obu_5fmessage_2eproto;
};// -------------------------------------------------------------------

class ObuBasicInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc.obu.msg.ObuBasicInfo) */ {
 public:
  inline ObuBasicInfo() : ObuBasicInfo(nullptr) {}
  ~ObuBasicInfo() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ObuBasicInfo(::google::protobuf::internal::ConstantInitialized);

  inline ObuBasicInfo(const ObuBasicInfo& from)
      : ObuBasicInfo(nullptr, from) {}
  ObuBasicInfo(ObuBasicInfo&& from) noexcept
    : ObuBasicInfo() {
    *this = ::std::move(from);
  }

  inline ObuBasicInfo& operator=(const ObuBasicInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObuBasicInfo& operator=(ObuBasicInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ObuBasicInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const ObuBasicInfo* internal_default_instance() {
    return reinterpret_cast<const ObuBasicInfo*>(
               &_ObuBasicInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ObuBasicInfo& a, ObuBasicInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ObuBasicInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObuBasicInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ObuBasicInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ObuBasicInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ObuBasicInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ObuBasicInfo& from) {
    ObuBasicInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ObuBasicInfo* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "grpc.obu.msg.ObuBasicInfo";
  }
  protected:
  explicit ObuBasicInfo(::google::protobuf::Arena* arena);
  ObuBasicInfo(::google::protobuf::Arena* arena, const ObuBasicInfo& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeaderFieldNumber = 2,
    kLatitudeFieldNumber = 3,
    kLongitudeFieldNumber = 4,
    kAltitudeFieldNumber = 5,
    kGnssHeadingFieldNumber = 6,
    kGnssSpeedFieldNumber = 7,
    kVehicleSpeedFieldNumber = 8,
    kPitchRadFieldNumber = 9,
    kRollRadFieldNumber = 10,
    kYawRadFieldNumber = 11,
  };
  // .grpc.obu.msg.Header Header = 2;
  bool has_header() const;
  void clear_header() ;
  const ::grpc::obu::msg::Header& header() const;
  PROTOBUF_NODISCARD ::grpc::obu::msg::Header* release_header();
  ::grpc::obu::msg::Header* mutable_header();
  void set_allocated_header(::grpc::obu::msg::Header* value);
  void unsafe_arena_set_allocated_header(::grpc::obu::msg::Header* value);
  ::grpc::obu::msg::Header* unsafe_arena_release_header();

  private:
  const ::grpc::obu::msg::Header& _internal_header() const;
  ::grpc::obu::msg::Header* _internal_mutable_header();

  public:
  // float latitude = 3;
  void clear_latitude() ;
  float latitude() const;
  void set_latitude(float value);

  private:
  float _internal_latitude() const;
  void _internal_set_latitude(float value);

  public:
  // float longitude = 4;
  void clear_longitude() ;
  float longitude() const;
  void set_longitude(float value);

  private:
  float _internal_longitude() const;
  void _internal_set_longitude(float value);

  public:
  // float altitude = 5;
  void clear_altitude() ;
  float altitude() const;
  void set_altitude(float value);

  private:
  float _internal_altitude() const;
  void _internal_set_altitude(float value);

  public:
  // float gnss_heading = 6;
  void clear_gnss_heading() ;
  float gnss_heading() const;
  void set_gnss_heading(float value);

  private:
  float _internal_gnss_heading() const;
  void _internal_set_gnss_heading(float value);

  public:
  // float gnss_speed = 7;
  void clear_gnss_speed() ;
  float gnss_speed() const;
  void set_gnss_speed(float value);

  private:
  float _internal_gnss_speed() const;
  void _internal_set_gnss_speed(float value);

  public:
  // float vehicle_speed = 8;
  void clear_vehicle_speed() ;
  float vehicle_speed() const;
  void set_vehicle_speed(float value);

  private:
  float _internal_vehicle_speed() const;
  void _internal_set_vehicle_speed(float value);

  public:
  // float pitch_rad = 9;
  void clear_pitch_rad() ;
  float pitch_rad() const;
  void set_pitch_rad(float value);

  private:
  float _internal_pitch_rad() const;
  void _internal_set_pitch_rad(float value);

  public:
  // float roll_rad = 10;
  void clear_roll_rad() ;
  float roll_rad() const;
  void set_roll_rad(float value);

  private:
  float _internal_roll_rad() const;
  void _internal_set_roll_rad(float value);

  public:
  // float yaw_rad = 11;
  void clear_yaw_rad() ;
  float yaw_rad() const;
  void set_yaw_rad(float value);

  private:
  float _internal_yaw_rad() const;
  void _internal_set_yaw_rad(float value);

  public:
  // @@protoc_insertion_point(class_scope:grpc.obu.msg.ObuBasicInfo)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::grpc::obu::msg::Header* header_;
    float latitude_;
    float longitude_;
    float altitude_;
    float gnss_heading_;
    float gnss_speed_;
    float vehicle_speed_;
    float pitch_rad_;
    float roll_rad_;
    float yaw_rad_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_obu_5fmessage_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Time

// int32 sec = 1;
inline void Time::clear_sec() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sec_ = 0;
}
inline ::int32_t Time::sec() const {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.Time.sec)
  return _internal_sec();
}
inline void Time::set_sec(::int32_t value) {
  _internal_set_sec(value);
  // @@protoc_insertion_point(field_set:grpc.obu.msg.Time.sec)
}
inline ::int32_t Time::_internal_sec() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sec_;
}
inline void Time::_internal_set_sec(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sec_ = value;
}

// uint32 nanosec = 2;
inline void Time::clear_nanosec() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nanosec_ = 0u;
}
inline ::uint32_t Time::nanosec() const {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.Time.nanosec)
  return _internal_nanosec();
}
inline void Time::set_nanosec(::uint32_t value) {
  _internal_set_nanosec(value);
  // @@protoc_insertion_point(field_set:grpc.obu.msg.Time.nanosec)
}
inline ::uint32_t Time::_internal_nanosec() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nanosec_;
}
inline void Time::_internal_set_nanosec(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nanosec_ = value;
}

// -------------------------------------------------------------------

// Header

// string name = 1;
inline void Header::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Header::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.Header.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Header::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:grpc.obu.msg.Header.name)
}
inline std::string* Header::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:grpc.obu.msg.Header.name)
  return _s;
}
inline const std::string& Header::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void Header::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Header::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Header::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:grpc.obu.msg.Header.name)
  return _impl_.name_.Release();
}
inline void Header::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpc.obu.msg.Header.name)
}

// string frame_id = 2;
inline void Header::clear_frame_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.frame_id_.ClearToEmpty();
}
inline const std::string& Header::frame_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.Header.frame_id)
  return _internal_frame_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Header::set_frame_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.frame_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:grpc.obu.msg.Header.frame_id)
}
inline std::string* Header::mutable_frame_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_frame_id();
  // @@protoc_insertion_point(field_mutable:grpc.obu.msg.Header.frame_id)
  return _s;
}
inline const std::string& Header::_internal_frame_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.frame_id_.Get();
}
inline void Header::_internal_set_frame_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.frame_id_.Set(value, GetArena());
}
inline std::string* Header::_internal_mutable_frame_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.frame_id_.Mutable( GetArena());
}
inline std::string* Header::release_frame_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:grpc.obu.msg.Header.frame_id)
  return _impl_.frame_id_.Release();
}
inline void Header::set_allocated_frame_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.frame_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.frame_id_.IsDefault()) {
          _impl_.frame_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpc.obu.msg.Header.frame_id)
}

// .grpc.obu.msg.Time stamp = 3;
inline bool Header::has_stamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.stamp_ != nullptr);
  return value;
}
inline void Header::clear_stamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.stamp_ != nullptr) _impl_.stamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::grpc::obu::msg::Time& Header::_internal_stamp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::grpc::obu::msg::Time* p = _impl_.stamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::grpc::obu::msg::Time&>(::grpc::obu::msg::_Time_default_instance_);
}
inline const ::grpc::obu::msg::Time& Header::stamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.Header.stamp)
  return _internal_stamp();
}
inline void Header::unsafe_arena_set_allocated_stamp(::grpc::obu::msg::Time* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.stamp_);
  }
  _impl_.stamp_ = reinterpret_cast<::grpc::obu::msg::Time*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:grpc.obu.msg.Header.stamp)
}
inline ::grpc::obu::msg::Time* Header::release_stamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::grpc::obu::msg::Time* released = _impl_.stamp_;
  _impl_.stamp_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::grpc::obu::msg::Time* Header::unsafe_arena_release_stamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:grpc.obu.msg.Header.stamp)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::grpc::obu::msg::Time* temp = _impl_.stamp_;
  _impl_.stamp_ = nullptr;
  return temp;
}
inline ::grpc::obu::msg::Time* Header::_internal_mutable_stamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.stamp_ == nullptr) {
    auto* p = CreateMaybeMessage<::grpc::obu::msg::Time>(GetArena());
    _impl_.stamp_ = reinterpret_cast<::grpc::obu::msg::Time*>(p);
  }
  return _impl_.stamp_;
}
inline ::grpc::obu::msg::Time* Header::mutable_stamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::grpc::obu::msg::Time* _msg = _internal_mutable_stamp();
  // @@protoc_insertion_point(field_mutable:grpc.obu.msg.Header.stamp)
  return _msg;
}
inline void Header::set_allocated_stamp(::grpc::obu::msg::Time* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::grpc::obu::msg::Time*>(_impl_.stamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::grpc::obu::msg::Time*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.stamp_ = reinterpret_cast<::grpc::obu::msg::Time*>(value);
  // @@protoc_insertion_point(field_set_allocated:grpc.obu.msg.Header.stamp)
}

// string status = 4;
inline void Header::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.status_.ClearToEmpty();
}
inline const std::string& Header::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.Header.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Header::set_status(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:grpc.obu.msg.Header.status)
}
inline std::string* Header::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:grpc.obu.msg.Header.status)
  return _s;
}
inline const std::string& Header::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_.Get();
}
inline void Header::_internal_set_status(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_.Set(value, GetArena());
}
inline std::string* Header::_internal_mutable_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* Header::release_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:grpc.obu.msg.Header.status)
  return _impl_.status_.Release();
}
inline void Header::set_allocated_status(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.status_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.status_.IsDefault()) {
          _impl_.status_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpc.obu.msg.Header.status)
}

// -------------------------------------------------------------------

// ObuWarningInfo

// bool fcw = 1;
inline void ObuWarningInfo::clear_fcw() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fcw_ = false;
}
inline bool ObuWarningInfo::fcw() const {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.ObuWarningInfo.fcw)
  return _internal_fcw();
}
inline void ObuWarningInfo::set_fcw(bool value) {
  _internal_set_fcw(value);
  // @@protoc_insertion_point(field_set:grpc.obu.msg.ObuWarningInfo.fcw)
}
inline bool ObuWarningInfo::_internal_fcw() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fcw_;
}
inline void ObuWarningInfo::_internal_set_fcw(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fcw_ = value;
}

// bool icw = 2;
inline void ObuWarningInfo::clear_icw() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.icw_ = false;
}
inline bool ObuWarningInfo::icw() const {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.ObuWarningInfo.icw)
  return _internal_icw();
}
inline void ObuWarningInfo::set_icw(bool value) {
  _internal_set_icw(value);
  // @@protoc_insertion_point(field_set:grpc.obu.msg.ObuWarningInfo.icw)
}
inline bool ObuWarningInfo::_internal_icw() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.icw_;
}
inline void ObuWarningInfo::_internal_set_icw(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.icw_ = value;
}

// bool bsw = 3;
inline void ObuWarningInfo::clear_bsw() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bsw_ = false;
}
inline bool ObuWarningInfo::bsw() const {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.ObuWarningInfo.bsw)
  return _internal_bsw();
}
inline void ObuWarningInfo::set_bsw(bool value) {
  _internal_set_bsw(value);
  // @@protoc_insertion_point(field_set:grpc.obu.msg.ObuWarningInfo.bsw)
}
inline bool ObuWarningInfo::_internal_bsw() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bsw_;
}
inline void ObuWarningInfo::_internal_set_bsw(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bsw_ = value;
}

// bool avw = 4;
inline void ObuWarningInfo::clear_avw() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.avw_ = false;
}
inline bool ObuWarningInfo::avw() const {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.ObuWarningInfo.avw)
  return _internal_avw();
}
inline void ObuWarningInfo::set_avw(bool value) {
  _internal_set_avw(value);
  // @@protoc_insertion_point(field_set:grpc.obu.msg.ObuWarningInfo.avw)
}
inline bool ObuWarningInfo::_internal_avw() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.avw_;
}
inline void ObuWarningInfo::_internal_set_avw(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.avw_ = value;
}

// bool glosa = 5;
inline void ObuWarningInfo::clear_glosa() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.glosa_ = false;
}
inline bool ObuWarningInfo::glosa() const {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.ObuWarningInfo.glosa)
  return _internal_glosa();
}
inline void ObuWarningInfo::set_glosa(bool value) {
  _internal_set_glosa(value);
  // @@protoc_insertion_point(field_set:grpc.obu.msg.ObuWarningInfo.glosa)
}
inline bool ObuWarningInfo::_internal_glosa() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.glosa_;
}
inline void ObuWarningInfo::_internal_set_glosa(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.glosa_ = value;
}

// float glosa_mps = 6;
inline void ObuWarningInfo::clear_glosa_mps() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.glosa_mps_ = 0;
}
inline float ObuWarningInfo::glosa_mps() const {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.ObuWarningInfo.glosa_mps)
  return _internal_glosa_mps();
}
inline void ObuWarningInfo::set_glosa_mps(float value) {
  _internal_set_glosa_mps(value);
  // @@protoc_insertion_point(field_set:grpc.obu.msg.ObuWarningInfo.glosa_mps)
}
inline float ObuWarningInfo::_internal_glosa_mps() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.glosa_mps_;
}
inline void ObuWarningInfo::_internal_set_glosa_mps(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.glosa_mps_ = value;
}

// bool evw = 7;
inline void ObuWarningInfo::clear_evw() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.evw_ = false;
}
inline bool ObuWarningInfo::evw() const {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.ObuWarningInfo.evw)
  return _internal_evw();
}
inline void ObuWarningInfo::set_evw(bool value) {
  _internal_set_evw(value);
  // @@protoc_insertion_point(field_set:grpc.obu.msg.ObuWarningInfo.evw)
}
inline bool ObuWarningInfo::_internal_evw() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.evw_;
}
inline void ObuWarningInfo::_internal_set_evw(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.evw_ = value;
}

// -------------------------------------------------------------------

// ObuBasicInfo

// .grpc.obu.msg.Header Header = 2;
inline bool ObuBasicInfo::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline void ObuBasicInfo::clear_header() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::grpc::obu::msg::Header& ObuBasicInfo::_internal_header() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::grpc::obu::msg::Header* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::grpc::obu::msg::Header&>(::grpc::obu::msg::_Header_default_instance_);
}
inline const ::grpc::obu::msg::Header& ObuBasicInfo::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.ObuBasicInfo.Header)
  return _internal_header();
}
inline void ObuBasicInfo::unsafe_arena_set_allocated_header(::grpc::obu::msg::Header* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::grpc::obu::msg::Header*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:grpc.obu.msg.ObuBasicInfo.Header)
}
inline ::grpc::obu::msg::Header* ObuBasicInfo::release_header() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::grpc::obu::msg::Header* released = _impl_.header_;
  _impl_.header_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::grpc::obu::msg::Header* ObuBasicInfo::unsafe_arena_release_header() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:grpc.obu.msg.ObuBasicInfo.Header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::grpc::obu::msg::Header* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::grpc::obu::msg::Header* ObuBasicInfo::_internal_mutable_header() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.header_ == nullptr) {
    auto* p = CreateMaybeMessage<::grpc::obu::msg::Header>(GetArena());
    _impl_.header_ = reinterpret_cast<::grpc::obu::msg::Header*>(p);
  }
  return _impl_.header_;
}
inline ::grpc::obu::msg::Header* ObuBasicInfo::mutable_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::grpc::obu::msg::Header* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:grpc.obu.msg.ObuBasicInfo.Header)
  return _msg;
}
inline void ObuBasicInfo::set_allocated_header(::grpc::obu::msg::Header* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::grpc::obu::msg::Header*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::grpc::obu::msg::Header*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::grpc::obu::msg::Header*>(value);
  // @@protoc_insertion_point(field_set_allocated:grpc.obu.msg.ObuBasicInfo.Header)
}

// float latitude = 3;
inline void ObuBasicInfo::clear_latitude() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.latitude_ = 0;
}
inline float ObuBasicInfo::latitude() const {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.ObuBasicInfo.latitude)
  return _internal_latitude();
}
inline void ObuBasicInfo::set_latitude(float value) {
  _internal_set_latitude(value);
  // @@protoc_insertion_point(field_set:grpc.obu.msg.ObuBasicInfo.latitude)
}
inline float ObuBasicInfo::_internal_latitude() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.latitude_;
}
inline void ObuBasicInfo::_internal_set_latitude(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.latitude_ = value;
}

// float longitude = 4;
inline void ObuBasicInfo::clear_longitude() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.longitude_ = 0;
}
inline float ObuBasicInfo::longitude() const {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.ObuBasicInfo.longitude)
  return _internal_longitude();
}
inline void ObuBasicInfo::set_longitude(float value) {
  _internal_set_longitude(value);
  // @@protoc_insertion_point(field_set:grpc.obu.msg.ObuBasicInfo.longitude)
}
inline float ObuBasicInfo::_internal_longitude() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.longitude_;
}
inline void ObuBasicInfo::_internal_set_longitude(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.longitude_ = value;
}

// float altitude = 5;
inline void ObuBasicInfo::clear_altitude() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.altitude_ = 0;
}
inline float ObuBasicInfo::altitude() const {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.ObuBasicInfo.altitude)
  return _internal_altitude();
}
inline void ObuBasicInfo::set_altitude(float value) {
  _internal_set_altitude(value);
  // @@protoc_insertion_point(field_set:grpc.obu.msg.ObuBasicInfo.altitude)
}
inline float ObuBasicInfo::_internal_altitude() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.altitude_;
}
inline void ObuBasicInfo::_internal_set_altitude(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.altitude_ = value;
}

// float gnss_heading = 6;
inline void ObuBasicInfo::clear_gnss_heading() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gnss_heading_ = 0;
}
inline float ObuBasicInfo::gnss_heading() const {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.ObuBasicInfo.gnss_heading)
  return _internal_gnss_heading();
}
inline void ObuBasicInfo::set_gnss_heading(float value) {
  _internal_set_gnss_heading(value);
  // @@protoc_insertion_point(field_set:grpc.obu.msg.ObuBasicInfo.gnss_heading)
}
inline float ObuBasicInfo::_internal_gnss_heading() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gnss_heading_;
}
inline void ObuBasicInfo::_internal_set_gnss_heading(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.gnss_heading_ = value;
}

// float gnss_speed = 7;
inline void ObuBasicInfo::clear_gnss_speed() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gnss_speed_ = 0;
}
inline float ObuBasicInfo::gnss_speed() const {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.ObuBasicInfo.gnss_speed)
  return _internal_gnss_speed();
}
inline void ObuBasicInfo::set_gnss_speed(float value) {
  _internal_set_gnss_speed(value);
  // @@protoc_insertion_point(field_set:grpc.obu.msg.ObuBasicInfo.gnss_speed)
}
inline float ObuBasicInfo::_internal_gnss_speed() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gnss_speed_;
}
inline void ObuBasicInfo::_internal_set_gnss_speed(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.gnss_speed_ = value;
}

// float vehicle_speed = 8;
inline void ObuBasicInfo::clear_vehicle_speed() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.vehicle_speed_ = 0;
}
inline float ObuBasicInfo::vehicle_speed() const {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.ObuBasicInfo.vehicle_speed)
  return _internal_vehicle_speed();
}
inline void ObuBasicInfo::set_vehicle_speed(float value) {
  _internal_set_vehicle_speed(value);
  // @@protoc_insertion_point(field_set:grpc.obu.msg.ObuBasicInfo.vehicle_speed)
}
inline float ObuBasicInfo::_internal_vehicle_speed() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vehicle_speed_;
}
inline void ObuBasicInfo::_internal_set_vehicle_speed(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.vehicle_speed_ = value;
}

// float pitch_rad = 9;
inline void ObuBasicInfo::clear_pitch_rad() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pitch_rad_ = 0;
}
inline float ObuBasicInfo::pitch_rad() const {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.ObuBasicInfo.pitch_rad)
  return _internal_pitch_rad();
}
inline void ObuBasicInfo::set_pitch_rad(float value) {
  _internal_set_pitch_rad(value);
  // @@protoc_insertion_point(field_set:grpc.obu.msg.ObuBasicInfo.pitch_rad)
}
inline float ObuBasicInfo::_internal_pitch_rad() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pitch_rad_;
}
inline void ObuBasicInfo::_internal_set_pitch_rad(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pitch_rad_ = value;
}

// float roll_rad = 10;
inline void ObuBasicInfo::clear_roll_rad() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.roll_rad_ = 0;
}
inline float ObuBasicInfo::roll_rad() const {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.ObuBasicInfo.roll_rad)
  return _internal_roll_rad();
}
inline void ObuBasicInfo::set_roll_rad(float value) {
  _internal_set_roll_rad(value);
  // @@protoc_insertion_point(field_set:grpc.obu.msg.ObuBasicInfo.roll_rad)
}
inline float ObuBasicInfo::_internal_roll_rad() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.roll_rad_;
}
inline void ObuBasicInfo::_internal_set_roll_rad(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.roll_rad_ = value;
}

// float yaw_rad = 11;
inline void ObuBasicInfo::clear_yaw_rad() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.yaw_rad_ = 0;
}
inline float ObuBasicInfo::yaw_rad() const {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.ObuBasicInfo.yaw_rad)
  return _internal_yaw_rad();
}
inline void ObuBasicInfo::set_yaw_rad(float value) {
  _internal_set_yaw_rad(value);
  // @@protoc_insertion_point(field_set:grpc.obu.msg.ObuBasicInfo.yaw_rad)
}
inline float ObuBasicInfo::_internal_yaw_rad() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.yaw_rad_;
}
inline void ObuBasicInfo::_internal_set_yaw_rad(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.yaw_rad_ = value;
}

// -------------------------------------------------------------------

// TrafficLight

// .grpc.obu.msg.TrafficLight.TrafficLightState state = 2;
inline void TrafficLight::clear_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.state_ = 0;
}
inline ::grpc::obu::msg::TrafficLight_TrafficLightState TrafficLight::state() const {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.TrafficLight.state)
  return _internal_state();
}
inline void TrafficLight::set_state(::grpc::obu::msg::TrafficLight_TrafficLightState value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:grpc.obu.msg.TrafficLight.state)
}
inline ::grpc::obu::msg::TrafficLight_TrafficLightState TrafficLight::_internal_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::grpc::obu::msg::TrafficLight_TrafficLightState>(_impl_.state_);
}
inline void TrafficLight::_internal_set_state(::grpc::obu::msg::TrafficLight_TrafficLightState value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.state_ = value;
}

// float remaining_time = 3;
inline void TrafficLight::clear_remaining_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.remaining_time_ = 0;
}
inline float TrafficLight::remaining_time() const {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.TrafficLight.remaining_time)
  return _internal_remaining_time();
}
inline void TrafficLight::set_remaining_time(float value) {
  _internal_set_remaining_time(value);
  // @@protoc_insertion_point(field_set:grpc.obu.msg.TrafficLight.remaining_time)
}
inline float TrafficLight::_internal_remaining_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.remaining_time_;
}
inline void TrafficLight::_internal_set_remaining_time(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.remaining_time_ = value;
}

// -------------------------------------------------------------------

// ObuTrafficLightInfo

// .grpc.obu.msg.Header Header = 1;
inline bool ObuTrafficLightInfo::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline void ObuTrafficLightInfo::clear_header() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::grpc::obu::msg::Header& ObuTrafficLightInfo::_internal_header() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::grpc::obu::msg::Header* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::grpc::obu::msg::Header&>(::grpc::obu::msg::_Header_default_instance_);
}
inline const ::grpc::obu::msg::Header& ObuTrafficLightInfo::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.ObuTrafficLightInfo.Header)
  return _internal_header();
}
inline void ObuTrafficLightInfo::unsafe_arena_set_allocated_header(::grpc::obu::msg::Header* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::grpc::obu::msg::Header*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:grpc.obu.msg.ObuTrafficLightInfo.Header)
}
inline ::grpc::obu::msg::Header* ObuTrafficLightInfo::release_header() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::grpc::obu::msg::Header* released = _impl_.header_;
  _impl_.header_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::grpc::obu::msg::Header* ObuTrafficLightInfo::unsafe_arena_release_header() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:grpc.obu.msg.ObuTrafficLightInfo.Header)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::grpc::obu::msg::Header* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::grpc::obu::msg::Header* ObuTrafficLightInfo::_internal_mutable_header() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.header_ == nullptr) {
    auto* p = CreateMaybeMessage<::grpc::obu::msg::Header>(GetArena());
    _impl_.header_ = reinterpret_cast<::grpc::obu::msg::Header*>(p);
  }
  return _impl_.header_;
}
inline ::grpc::obu::msg::Header* ObuTrafficLightInfo::mutable_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::grpc::obu::msg::Header* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:grpc.obu.msg.ObuTrafficLightInfo.Header)
  return _msg;
}
inline void ObuTrafficLightInfo::set_allocated_header(::grpc::obu::msg::Header* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::grpc::obu::msg::Header*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::grpc::obu::msg::Header*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_ = reinterpret_cast<::grpc::obu::msg::Header*>(value);
  // @@protoc_insertion_point(field_set_allocated:grpc.obu.msg.ObuTrafficLightInfo.Header)
}

// .grpc.obu.msg.TrafficLight turn_left = 2;
inline bool ObuTrafficLightInfo::has_turn_left() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.turn_left_ != nullptr);
  return value;
}
inline void ObuTrafficLightInfo::clear_turn_left() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.turn_left_ != nullptr) _impl_.turn_left_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::grpc::obu::msg::TrafficLight& ObuTrafficLightInfo::_internal_turn_left() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::grpc::obu::msg::TrafficLight* p = _impl_.turn_left_;
  return p != nullptr ? *p : reinterpret_cast<const ::grpc::obu::msg::TrafficLight&>(::grpc::obu::msg::_TrafficLight_default_instance_);
}
inline const ::grpc::obu::msg::TrafficLight& ObuTrafficLightInfo::turn_left() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.ObuTrafficLightInfo.turn_left)
  return _internal_turn_left();
}
inline void ObuTrafficLightInfo::unsafe_arena_set_allocated_turn_left(::grpc::obu::msg::TrafficLight* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.turn_left_);
  }
  _impl_.turn_left_ = reinterpret_cast<::grpc::obu::msg::TrafficLight*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:grpc.obu.msg.ObuTrafficLightInfo.turn_left)
}
inline ::grpc::obu::msg::TrafficLight* ObuTrafficLightInfo::release_turn_left() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::grpc::obu::msg::TrafficLight* released = _impl_.turn_left_;
  _impl_.turn_left_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::grpc::obu::msg::TrafficLight* ObuTrafficLightInfo::unsafe_arena_release_turn_left() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:grpc.obu.msg.ObuTrafficLightInfo.turn_left)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::grpc::obu::msg::TrafficLight* temp = _impl_.turn_left_;
  _impl_.turn_left_ = nullptr;
  return temp;
}
inline ::grpc::obu::msg::TrafficLight* ObuTrafficLightInfo::_internal_mutable_turn_left() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.turn_left_ == nullptr) {
    auto* p = CreateMaybeMessage<::grpc::obu::msg::TrafficLight>(GetArena());
    _impl_.turn_left_ = reinterpret_cast<::grpc::obu::msg::TrafficLight*>(p);
  }
  return _impl_.turn_left_;
}
inline ::grpc::obu::msg::TrafficLight* ObuTrafficLightInfo::mutable_turn_left() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::grpc::obu::msg::TrafficLight* _msg = _internal_mutable_turn_left();
  // @@protoc_insertion_point(field_mutable:grpc.obu.msg.ObuTrafficLightInfo.turn_left)
  return _msg;
}
inline void ObuTrafficLightInfo::set_allocated_turn_left(::grpc::obu::msg::TrafficLight* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::grpc::obu::msg::TrafficLight*>(_impl_.turn_left_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::grpc::obu::msg::TrafficLight*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.turn_left_ = reinterpret_cast<::grpc::obu::msg::TrafficLight*>(value);
  // @@protoc_insertion_point(field_set_allocated:grpc.obu.msg.ObuTrafficLightInfo.turn_left)
}

// .grpc.obu.msg.TrafficLight straight_ahead = 3;
inline bool ObuTrafficLightInfo::has_straight_ahead() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.straight_ahead_ != nullptr);
  return value;
}
inline void ObuTrafficLightInfo::clear_straight_ahead() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.straight_ahead_ != nullptr) _impl_.straight_ahead_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::grpc::obu::msg::TrafficLight& ObuTrafficLightInfo::_internal_straight_ahead() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::grpc::obu::msg::TrafficLight* p = _impl_.straight_ahead_;
  return p != nullptr ? *p : reinterpret_cast<const ::grpc::obu::msg::TrafficLight&>(::grpc::obu::msg::_TrafficLight_default_instance_);
}
inline const ::grpc::obu::msg::TrafficLight& ObuTrafficLightInfo::straight_ahead() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.ObuTrafficLightInfo.straight_ahead)
  return _internal_straight_ahead();
}
inline void ObuTrafficLightInfo::unsafe_arena_set_allocated_straight_ahead(::grpc::obu::msg::TrafficLight* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.straight_ahead_);
  }
  _impl_.straight_ahead_ = reinterpret_cast<::grpc::obu::msg::TrafficLight*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:grpc.obu.msg.ObuTrafficLightInfo.straight_ahead)
}
inline ::grpc::obu::msg::TrafficLight* ObuTrafficLightInfo::release_straight_ahead() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::grpc::obu::msg::TrafficLight* released = _impl_.straight_ahead_;
  _impl_.straight_ahead_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::grpc::obu::msg::TrafficLight* ObuTrafficLightInfo::unsafe_arena_release_straight_ahead() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:grpc.obu.msg.ObuTrafficLightInfo.straight_ahead)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::grpc::obu::msg::TrafficLight* temp = _impl_.straight_ahead_;
  _impl_.straight_ahead_ = nullptr;
  return temp;
}
inline ::grpc::obu::msg::TrafficLight* ObuTrafficLightInfo::_internal_mutable_straight_ahead() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.straight_ahead_ == nullptr) {
    auto* p = CreateMaybeMessage<::grpc::obu::msg::TrafficLight>(GetArena());
    _impl_.straight_ahead_ = reinterpret_cast<::grpc::obu::msg::TrafficLight*>(p);
  }
  return _impl_.straight_ahead_;
}
inline ::grpc::obu::msg::TrafficLight* ObuTrafficLightInfo::mutable_straight_ahead() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::grpc::obu::msg::TrafficLight* _msg = _internal_mutable_straight_ahead();
  // @@protoc_insertion_point(field_mutable:grpc.obu.msg.ObuTrafficLightInfo.straight_ahead)
  return _msg;
}
inline void ObuTrafficLightInfo::set_allocated_straight_ahead(::grpc::obu::msg::TrafficLight* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::grpc::obu::msg::TrafficLight*>(_impl_.straight_ahead_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::grpc::obu::msg::TrafficLight*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.straight_ahead_ = reinterpret_cast<::grpc::obu::msg::TrafficLight*>(value);
  // @@protoc_insertion_point(field_set_allocated:grpc.obu.msg.ObuTrafficLightInfo.straight_ahead)
}

// .grpc.obu.msg.TrafficLight turn_right = 4;
inline bool ObuTrafficLightInfo::has_turn_right() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.turn_right_ != nullptr);
  return value;
}
inline void ObuTrafficLightInfo::clear_turn_right() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.turn_right_ != nullptr) _impl_.turn_right_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::grpc::obu::msg::TrafficLight& ObuTrafficLightInfo::_internal_turn_right() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::grpc::obu::msg::TrafficLight* p = _impl_.turn_right_;
  return p != nullptr ? *p : reinterpret_cast<const ::grpc::obu::msg::TrafficLight&>(::grpc::obu::msg::_TrafficLight_default_instance_);
}
inline const ::grpc::obu::msg::TrafficLight& ObuTrafficLightInfo::turn_right() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpc.obu.msg.ObuTrafficLightInfo.turn_right)
  return _internal_turn_right();
}
inline void ObuTrafficLightInfo::unsafe_arena_set_allocated_turn_right(::grpc::obu::msg::TrafficLight* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.turn_right_);
  }
  _impl_.turn_right_ = reinterpret_cast<::grpc::obu::msg::TrafficLight*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:grpc.obu.msg.ObuTrafficLightInfo.turn_right)
}
inline ::grpc::obu::msg::TrafficLight* ObuTrafficLightInfo::release_turn_right() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::grpc::obu::msg::TrafficLight* released = _impl_.turn_right_;
  _impl_.turn_right_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::grpc::obu::msg::TrafficLight* ObuTrafficLightInfo::unsafe_arena_release_turn_right() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:grpc.obu.msg.ObuTrafficLightInfo.turn_right)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::grpc::obu::msg::TrafficLight* temp = _impl_.turn_right_;
  _impl_.turn_right_ = nullptr;
  return temp;
}
inline ::grpc::obu::msg::TrafficLight* ObuTrafficLightInfo::_internal_mutable_turn_right() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.turn_right_ == nullptr) {
    auto* p = CreateMaybeMessage<::grpc::obu::msg::TrafficLight>(GetArena());
    _impl_.turn_right_ = reinterpret_cast<::grpc::obu::msg::TrafficLight*>(p);
  }
  return _impl_.turn_right_;
}
inline ::grpc::obu::msg::TrafficLight* ObuTrafficLightInfo::mutable_turn_right() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::grpc::obu::msg::TrafficLight* _msg = _internal_mutable_turn_right();
  // @@protoc_insertion_point(field_mutable:grpc.obu.msg.ObuTrafficLightInfo.turn_right)
  return _msg;
}
inline void ObuTrafficLightInfo::set_allocated_turn_right(::grpc::obu::msg::TrafficLight* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::grpc::obu::msg::TrafficLight*>(_impl_.turn_right_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::grpc::obu::msg::TrafficLight*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.turn_right_ = reinterpret_cast<::grpc::obu::msg::TrafficLight*>(value);
  // @@protoc_insertion_point(field_set_allocated:grpc.obu.msg.ObuTrafficLightInfo.turn_right)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace msg
}  // namespace obu
}  // namespace grpc


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::grpc::obu::msg::TrafficLight_TrafficLightState> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::grpc::obu::msg::TrafficLight_TrafficLightState>() {
  return ::grpc::obu::msg::TrafficLight_TrafficLightState_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_obu_5fmessage_2eproto_2epb_2eh
